# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
    - main
    - github-actions-ci
  pull_request:
    branches:
    - main
    - github-actions-ci
  release:
    types: [published, prereleased]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2  
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
      - name: Build theme
        run: |
          sudo apt-get install bsdtar curl nodejs
          sh -x ./build.sh
        env:
          THEME_VERSION: ${{ steps.get_version.outputs.VERSION }}
      - name: Upload build package
        uses: actions/upload-artifact@v2
        with:
          name: build-package
          path: ${{ steps.get_version.outputs.VERSION }}.tar.gz
  release:
    if: github.event_name == 'release' || github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-18.04
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
    - name: Download build package from build job
      uses: actions/download-artifact@v2
      with:
        name: build-package
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: clarin_bootstrap-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: ${{ steps.get_version.outputs.VERSION }}.tar.gz
        tag: ${{ steps.get_version.outputs.VERSION }}
        overwrite: true
        body: "This is my release text"
